{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (3rd copy)/project/src/App/App.js\";\nimport React from \"react\";\nimport Routing from \"./Routing\";\nimport \"./App.scss\"; // import { FormattedMessage, FormattedHTMLMessage } from \"react-intl\";\n\nimport { IntlProvider } from \"react-intl\";\nimport { connect } from 'react-redux';\nimport { setCurrentLang } from '../Redux/Actions/index'; // import { addLocaleData } from \"react-intl\";\n// import locale_en from \"react-intl/locale-data/en\";\n// import locale_ar from \"react-intl/locale-data/ar\";\n// import messages_en from \"../Translations/en.json\";\n// import messages_ar from \"../Translations/ar.json\";\n// addLocaleData([...locale_en, ...locale_ar]);\n// let defaultLang;\n\n/* Define your default translations */\n// let i18nConfig = {\n//   locale: \"en\",\n//   messages: messages_en\n// };\n\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setLanguage = lang => {\n      console.log(lang);\n      localStorage.setItem(\"lang\", lang);\n      this.props.setCurrentLang(lang);\n    };\n  }\n\n  // onChangeLanguage(lang) {\n  //   switch (lang) {\n  //     case \"ar\":\n  //       i18nConfig.messages = messages_ar;\n  //       break;\n  //     case \"en\":\n  //       i18nConfig.messages = messages_en;\n  //       break;\n  //     default:\n  //       i18nConfig.messages = messages_en;\n  //       break;\n  //   }\n  //   this.setState({ locale: lang });\n  //   i18nConfig.locale = lang;\n  // }\n  render() {\n    return React.createElement(IntlProvider, {\n      locale: i18nConfig.locale,\n      messages: i18nConfig.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: i18nConfig.locale === \"ar\" ? \"rtl\" : \"ltr\",\n      dir: i18nConfig.locale === \"ar\" ? \"rtl\" : \"ltr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.setLanguage(\"en\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"English\"), React.createElement(\"button\", {\n      onClick: () => this.setLanguage(\"ar\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Arabic\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(FormattedHTMLMessage, {\n      id: \"app.text\",\n      defaultMessage: \"Edit <code>src/App.js</code> and save to reload.<br/>Now with {what}!\",\n      description: \"Welcome header on app main page\",\n      values: {\n        what: \"react-intl\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"app.learn-react-link\",\n      defaultMessage: \"Learn React\",\n      description: \"Link on react page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))), React.createElement(Routing, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default connect(null, {\n  setCurrentLang\n})(App);","map":{"version":3,"sources":["/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (3rd copy)/project/src/App/App.js"],"names":["React","Routing","IntlProvider","connect","setCurrentLang","App","Component","setLanguage","lang","console","log","localStorage","setItem","props","render","i18nConfig","locale","messages","what"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,YAAP,C,CACA;;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,wBAA7B,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SACvCC,WADuC,GACzBC,IAAI,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,IAA7B;AACA,WAAKK,KAAL,CAAWT,cAAX,CAA0BI,IAA1B;AACD,KALsC;AAAA;;AAMvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAEC,UAAU,CAACC,MAAjC;AAAyC,MAAA,QAAQ,EAAED,UAAU,CAACE,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAEF,UAAU,CAACC,MAAX,KAAsB,IAAtB,GAA6B,KAA7B,GAAqC,KADlD;AAEE,MAAA,GAAG,EAAED,UAAU,CAACC,MAAX,KAAsB,IAAtB,GAA6B,KAA7B,GAAqC,KAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,CAAiB,IAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,WAAL,CAAiB,IAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,oBAAD;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,cAAc,EAAC,uEAFjB;AAGE,MAAA,WAAW,EAAC,iCAHd;AAIE,MAAA,MAAM,EAAE;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,EAWE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,IAAI,EAAC,qBAFP;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,sBADL;AAEE,MAAA,cAAc,EAAC,aAFjB;AAGE,MAAA,WAAW,EAAC,oBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAXF,CAJF,EA4BE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,CADF,CADF;AAkCD;;AAxDsC;AA2DzC,eAAef,OAAO,CAAC,IAAD,EAAM;AAACC,EAAAA;AAAD,CAAN,CAAP,CAA+BC,GAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport Routing from \"./Routing\";\nimport \"./App.scss\";\n// import { FormattedMessage, FormattedHTMLMessage } from \"react-intl\";\nimport { IntlProvider } from \"react-intl\";\nimport {connect} from 'react-redux';\nimport {setCurrentLang} from '../Redux/Actions/index';\n// import { addLocaleData } from \"react-intl\";\n// import locale_en from \"react-intl/locale-data/en\";\n// import locale_ar from \"react-intl/locale-data/ar\";\n// import messages_en from \"../Translations/en.json\";\n// import messages_ar from \"../Translations/ar.json\";\n// addLocaleData([...locale_en, ...locale_ar]);\n\n// let defaultLang;\n/* Define your default translations */\n// let i18nConfig = {\n//   locale: \"en\",\n//   messages: messages_en\n// };\n\nexport class App extends React.Component {\n  setLanguage = lang => {\n    console.log(lang);\n    localStorage.setItem(\"lang\", lang);\n    this.props.setCurrentLang(lang);\n  };\n  // onChangeLanguage(lang) {\n  //   switch (lang) {\n  //     case \"ar\":\n  //       i18nConfig.messages = messages_ar;\n  //       break;\n  //     case \"en\":\n  //       i18nConfig.messages = messages_en;\n  //       break;\n  //     default:\n  //       i18nConfig.messages = messages_en;\n  //       break;\n  //   }\n  //   this.setState({ locale: lang });\n  //   i18nConfig.locale = lang;\n  // }\n  render() {\n    return (\n      <IntlProvider locale={i18nConfig.locale} messages={i18nConfig.messages}>\n        <div\n          className={i18nConfig.locale === \"ar\" ? \"rtl\" : \"ltr\"}\n          dir={i18nConfig.locale === \"ar\" ? \"rtl\" : \"ltr\"}\n        >\n          <div>\n            <button onClick={() => this.setLanguage(\"en\")}>English</button>\n            <button onClick={() => this.setLanguage(\"ar\")}>Arabic</button>\n            <p>\n              <FormattedHTMLMessage\n                id=\"app.text\"\n                defaultMessage=\"Edit <code>src/App.js</code> and save to reload.<br/>Now with {what}!\"\n                description=\"Welcome header on app main page\"\n                values={{ what: \"react-intl\" }}\n              />\n            </p>\n            <p\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"app.learn-react-link\"\n                defaultMessage=\"Learn React\"\n                description=\"Link on react page\"\n              />\n            </p>\n          </div>\n          <Routing />\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default connect(null,{setCurrentLang})(App);\n"]},"metadata":{},"sourceType":"module"}