{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (another copy)/project/src/App/App.js\";\nimport React from \"react\";\nimport Routing from \"./Routing\";\nimport \"./App.scss\";\nimport { FormattedMessage, FormattedHTMLMessage } from \"react-intl\";\nimport { IntlProvider } from \"react-intl\";\nimport { addLocaleData } from \"react-intl\";\nimport locale_en from \"react-intl/locale-data/en\";\nimport locale_ar from \"react-intl/locale-data/ar\";\nimport messages_en from \"../Translations/en.json\";\nimport messages_ar from \"../Translations/ar.json\";\naddLocaleData([...locale_en, ...locale_ar]);\nlet defaultLang;\n/* Define your default translations */\n\nlet i18nConfig = {\n  locale: defaultLang === \"ar\" ? \"en\" : \"ar\",\n  messages: defaultLang === \"ar\" ? messages_en : messages_ar\n}; // locale: this.defaultLang === \"ar\" ? \"ar\" : \"en\",\n//   messages: this.defaultLang === \"ar\" ? messages_ar : messages_en\n\nexport class App extends React.Component {\n  constructor() {\n    super();\n\n    this.setLanguage = lang => {\n      console.log(lang);\n      localStorage.setItem(\"lang\", lang);\n      this.onChangeLanguage(lang);\n    };\n\n    console.log(\"mero\");\n    this.defaultLang = localStorage.getItem(\"lang\");\n    console.log(this.defaultLang, this.defaultLang === \"ar\");\n  }\n\n  onChangeLanguage(lang) {\n    switch (lang) {\n      case \"ar\":\n        i18nConfig.messages = messages_ar;\n        break;\n\n      case \"en\":\n        i18nConfig.messages = messages_en;\n        break;\n\n      default:\n        i18nConfig.messages = messages_en;\n        break;\n    }\n\n    this.setState({\n      locale: lang\n    });\n    i18nConfig.locale = lang;\n  }\n\n  render() {\n    return React.createElement(IntlProvider, {\n      locale: i18nConfig.locale,\n      messages: i18nConfig.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: i18nConfig.locale === \"ar\" ? \"rtl\" : \"ltr\",\n      dir: i18nConfig.locale === \"ar\" ? \"rtl\" : \"ltr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.setLanguage(\"en\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"English\"), React.createElement(\"button\", {\n      onClick: () => this.setLanguage(\"ar\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Arabic\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormattedHTMLMessage, {\n      id: \"app.text\",\n      defaultMessage: \"Edit <code>src/App.js</code> and save to reload.<br/>Now with {what}!\",\n      description: \"Welcome header on app main page\",\n      values: {\n        what: \"react-intl\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"app.learn-react-link\",\n      defaultMessage: \"Learn React\",\n      description: \"Link on react page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(Routing, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (another copy)/project/src/App/App.js"],"names":["React","Routing","FormattedMessage","FormattedHTMLMessage","IntlProvider","addLocaleData","locale_en","locale_ar","messages_en","messages_ar","defaultLang","i18nConfig","locale","messages","App","Component","constructor","setLanguage","lang","console","log","localStorage","setItem","onChangeLanguage","getItem","setState","render","what"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Routing from \"./Routing\";\nimport \"./App.scss\";\nimport { FormattedMessage, FormattedHTMLMessage } from \"react-intl\";\nimport { IntlProvider } from \"react-intl\";\nimport { addLocaleData } from \"react-intl\";\nimport locale_en from \"react-intl/locale-data/en\";\nimport locale_ar from \"react-intl/locale-data/ar\";\nimport messages_en from \"../Translations/en.json\";\nimport messages_ar from \"../Translations/ar.json\";\naddLocaleData([...locale_en, ...locale_ar]);\n\nlet defaultLang;\n/* Define your default translations */\nlet i18nConfig = {\n  locale: defaultLang === \"ar\" ? \"en\" : \"ar\",\n  messages: defaultLang === \"ar\" ? messages_en : messages_ar\n};\n// locale: this.defaultLang === \"ar\" ? \"ar\" : \"en\",\n//   messages: this.defaultLang === \"ar\" ? messages_ar : messages_en\n\nexport class App extends React.Component {\n  constructor() {\n    super();\n    console.log(\"mero\");\n    this.defaultLang = localStorage.getItem(\"lang\");\n    console.log(this.defaultLang, this.defaultLang === \"ar\");\n  }\n  setLanguage = lang => {\n    console.log(lang);\n    localStorage.setItem(\"lang\", lang);\n    this.onChangeLanguage(lang);\n  };\n  onChangeLanguage(lang) {\n    switch (lang) {\n      case \"ar\":\n        i18nConfig.messages = messages_ar;\n        break;\n      case \"en\":\n        i18nConfig.messages = messages_en;\n        break;\n      default:\n        i18nConfig.messages = messages_en;\n        break;\n    }\n    this.setState({ locale: lang });\n    i18nConfig.locale = lang;\n  }\n  render() {\n    return (\n      <IntlProvider locale={i18nConfig.locale} messages={i18nConfig.messages}>\n        <div\n          className={i18nConfig.locale === \"ar\" ? \"rtl\" : \"ltr\"}\n          dir={i18nConfig.locale === \"ar\" ? \"rtl\" : \"ltr\"}\n        >\n          <div>\n            <button onClick={() => this.setLanguage(\"en\")}>English</button>\n            <button onClick={() => this.setLanguage(\"ar\")}>Arabic</button>\n            <p>\n              <FormattedHTMLMessage\n                id=\"app.text\"\n                defaultMessage=\"Edit <code>src/App.js</code> and save to reload.<br/>Now with {what}!\"\n                description=\"Welcome header on app main page\"\n                values={{ what: \"react-intl\" }}\n              />\n            </p>\n            <p\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"app.learn-react-link\"\n                defaultMessage=\"Learn React\"\n                description=\"Link on react page\"\n              />\n            </p>\n          </div>\n          <Routing />\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}