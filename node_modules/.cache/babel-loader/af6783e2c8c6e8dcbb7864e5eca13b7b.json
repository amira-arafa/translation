{"ast":null,"code":"import _defineProperty from \"/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (3rd copy)/project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { TEST_ACTION_SAGA, SET_CURRENT_LANG } from \"../Types\";\nexport const AllReducers = (state = {}, action) => {\n  switch (action.type) {\n    case TEST_ACTION_SAGA:\n      console.log(\"hello from reducer\");\n      return state;\n\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  lang: localStorage.getItem('lang') || 'en'\n};\nexport const language = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_LANG:\n      return _objectSpread({}, state, {\n        lang: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (3rd copy)/project/src/Redux/Reducers/AllReducers.js"],"names":["TEST_ACTION_SAGA","SET_CURRENT_LANG","AllReducers","state","action","type","console","log","initialState","lang","localStorage","getItem","language","payload"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,gBAA3B,QAAkD,UAAlD;AAGA,OAAO,MAAOC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,gBAAL;AACEM,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,aAAOJ,KAAP;;AACF;AACE,aAAOA,KAAP;AALJ;AAOD,CARM;AASP,MAAMK,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC;AADnB,CAArB;AAIA,OAAO,MAAOC,QAAQ,GAAC,CAACT,KAAK,GAAGK,YAAT,EAAuBJ,MAAvB,KAAiC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,gBAAL;AACI,+BACOE,KADP;AAEIM,QAAAA,IAAI,EAAEL,MAAM,CAACS;AAFjB;;AAIJ;AACI,aAAOV,KAAP;AAPR;AASH,CAVM","sourcesContent":["import { TEST_ACTION_SAGA ,SET_CURRENT_LANG} from \"../Types\";\n\n\nexport const  AllReducers = (state = {}, action) => {\n  switch (action.type) {\n    case TEST_ACTION_SAGA:\n      console.log(\"hello from reducer\");\n      return state;\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  lang: localStorage.getItem('lang') || 'en'\n};\n\nexport const  language=(state = initialState, action)=> {\n    switch (action.type) {\n        case SET_CURRENT_LANG:\n            return {\n                ...state,\n                lang: action.payload\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}