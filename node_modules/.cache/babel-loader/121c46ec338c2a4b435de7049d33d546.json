{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (another copy)/project/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\nimport { IntlProvider } from \"react-intl\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/Store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@formatjs/intl-pluralrules/polyfill\";\nimport \"@formatjs/intl-pluralrules/dist/locale-data/en\";\nimport \"@formatjs/intl-pluralrules/polyfill-locales\";\nimport messages_en from \"./translations/en.json\";\nconst messages = {\n  en: messages_en\n};\nconst language = navigator.language.split(/[-_]/)[0]; // language without region code\n// import locale_en from \"react-intl/locale-data/en\";\n// addLocaleData([...locale_en]);\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(IntlProvider, {\n  locale: \"en\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}))), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (another copy)/project/src/index.js"],"names":["React","ReactDOM","App","IntlProvider","Provider","store","messages_en","messages","en","language","navigator","split","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,sCAAP;AACA,OAAO,qCAAP;AACA,OAAO,gDAAP;AACA,OAAO,6CAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,EAAE,EAAEF;AADW,CAAjB;AAGA,MAAMG,QAAQ,GAAGC,SAAS,CAACD,QAAV,CAAmBE,KAAnB,CAAyB,MAAzB,EAAiC,CAAjC,CAAjB,C,CAAsD;AAEtD;AAEA;;AAEAV,QAAQ,CAACW,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,YAAD;AAAc,EAAA,MAAM,EAAC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEQ,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CANF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\nimport { IntlProvider } from \"react-intl\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/Store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@formatjs/intl-pluralrules/polyfill\";\nimport \"@formatjs/intl-pluralrules/dist/locale-data/en\";\nimport \"@formatjs/intl-pluralrules/polyfill-locales\";\nimport messages_en from \"./translations/en.json\";\n\nconst messages = {\n  en: messages_en\n};\nconst language = navigator.language.split(/[-_]/)[0]; // language without region code\n\n// import locale_en from \"react-intl/locale-data/en\";\n\n// addLocaleData([...locale_en]);\n\nReactDOM.render(\n  <Provider store={store}>\n    <IntlProvider locale=\"en\">\n      <App />\n    </IntlProvider>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"]},"metadata":{},"sourceType":"module"}