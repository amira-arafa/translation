{"ast":null,"code":"import { TEST_ACTION_SAGA, TEST_ACTION, FETCH_DATA_SAGA, FETCH_DATA, FETCH_SINGLE_DATA_SAGA, FETCH_SINGLE_DATA, POST_DATA_SAGA, POST_DATA } from \"../Types\";\nimport { takeEvery, put, call } from \"redux-saga/effects\";\nimport { unregister } from \"../../Apis/interceptor\";\nimport Api from \"../../Apis/Api\"; //-------------workers sagas--------------\n// TEST SAGA\n\nfunction* test() {\n  yield put({\n    type: TEST_ACTION\n  });\n}\n\nfunction* fetchData() {\n  const response = yield call(Api.fetchData);\n  unregister();\n  console.log(\"response\", response);\n  yield put({\n    type: FETCH_DATA\n  });\n}\n\nfunction* fetchSingleData(action) {\n  const id = action.id;\n  const response = yield call(Api.fetchSingleData, id);\n  console.log(\"response\", response);\n  yield put({\n    type: FETCH_SINGLE_DATA\n  });\n}\n\nfunction* postData() {\n  const response = yield call(Api.postData);\n  console.log(\"response\", response);\n  yield put({\n    type: POST_DATA\n  });\n} //-------------watchers sagas-------------\n\n\nexport default function* rootSaga() {\n  yield takeEvery(TEST_ACTION_SAGA, test);\n  yield takeEvery(FETCH_DATA_SAGA, fetchData);\n  yield takeEvery(FETCH_SINGLE_DATA_SAGA, fetchSingleData);\n  yield takeEvery(POST_DATA_SAGA, postData);\n}","map":{"version":3,"sources":["/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (copy)/project/src/Redux/Sagas/index.js"],"names":["TEST_ACTION_SAGA","TEST_ACTION","FETCH_DATA_SAGA","FETCH_DATA","FETCH_SINGLE_DATA_SAGA","FETCH_SINGLE_DATA","POST_DATA_SAGA","POST_DATA","takeEvery","put","call","unregister","Api","test","type","fetchData","response","console","log","fetchSingleData","action","id","postData","rootSaga"],"mappings":"AAAA,SACEA,gBADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,UAJF,EAKEC,sBALF,EAMEC,iBANF,EAOEC,cAPF,EAQEC,SARF,QASO,UATP;AAUA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,OAAOC,GAAP,MAAgB,gBAAhB,C,CACA;AAEA;;AAEA,UAAUC,IAAV,GAAiB;AACf,QAAMJ,GAAG,CAAC;AAAEK,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAT;AACD;;AAED,UAAUc,SAAV,GAAsB;AACpB,QAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACE,GAAG,CAACG,SAAL,CAA3B;AACAJ,EAAAA,UAAU;AACVM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,QAAMP,GAAG,CAAC;AAAEK,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAT;AACD;;AACD,UAAUgB,eAAV,CAA0BC,MAA1B,EAAkC;AAAA,QACxBC,EADwB,GACjBD,MADiB,CACxBC,EADwB;AAEhC,QAAML,QAAQ,GAAG,MAAMN,IAAI,CAACE,GAAG,CAACO,eAAL,EAAsBE,EAAtB,CAA3B;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,QAAMP,GAAG,CAAC;AAAEK,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAT;AACD;;AAED,UAAUiB,QAAV,GAAqB;AACnB,QAAMN,QAAQ,GAAG,MAAMN,IAAI,CAACE,GAAG,CAACU,QAAL,CAA3B;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,QAAMP,GAAG,CAAC;AAAEK,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAT;AACD,C,CACD;;;AAEA,eAAe,UAAUgB,QAAV,GAAqB;AAClC,QAAMf,SAAS,CAACR,gBAAD,EAAmBa,IAAnB,CAAf;AACA,QAAML,SAAS,CAACN,eAAD,EAAkBa,SAAlB,CAAf;AACA,QAAMP,SAAS,CAACJ,sBAAD,EAAyBe,eAAzB,CAAf;AACA,QAAMX,SAAS,CAACF,cAAD,EAAiBgB,QAAjB,CAAf;AACD","sourcesContent":["import {\n  TEST_ACTION_SAGA,\n  TEST_ACTION,\n  FETCH_DATA_SAGA,\n  FETCH_DATA,\n  FETCH_SINGLE_DATA_SAGA,\n  FETCH_SINGLE_DATA,\n  POST_DATA_SAGA,\n  POST_DATA\n} from \"../Types\";\nimport { takeEvery, put, call } from \"redux-saga/effects\";\nimport {unregister} from \"../../Apis/interceptor\";\nimport Api from \"../../Apis/Api\";\n//-------------workers sagas--------------\n\n// TEST SAGA\n\nfunction* test() {\n  yield put({ type: TEST_ACTION });\n}\n\nfunction* fetchData() {\n  const response = yield call(Api.fetchData);\n  unregister();\n  console.log(\"response\", response);\n  yield put({ type: FETCH_DATA });\n}\nfunction* fetchSingleData(action) {\n  const { id } = action;\n  const response = yield call(Api.fetchSingleData, id);\n  console.log(\"response\", response);\n  yield put({ type: FETCH_SINGLE_DATA });\n}\n\nfunction* postData() {\n  const response = yield call(Api.postData);\n  console.log(\"response\", response);\n  yield put({ type: POST_DATA });\n}\n//-------------watchers sagas-------------\n\nexport default function* rootSaga() {\n  yield takeEvery(TEST_ACTION_SAGA, test);\n  yield takeEvery(FETCH_DATA_SAGA, fetchData);\n  yield takeEvery(FETCH_SINGLE_DATA_SAGA, fetchSingleData);\n  yield takeEvery(POST_DATA_SAGA, postData);\n}\n"]},"metadata":{},"sourceType":"module"}