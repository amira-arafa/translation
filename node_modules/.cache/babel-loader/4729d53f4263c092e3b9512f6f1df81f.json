{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (3rd copy)/project/src/App/App.js\";\nimport React from \"react\";\nimport Routing from \"./Routing\";\nimport \"./App.scss\";\nimport { IntlProvider } from \"react-intl\";\nimport translation from './translation';\nimport { connect } from 'react-redux';\nimport { setCurrentLang } from '../Redux/Actions/index';\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setLanguage = lang => {\n      this.props.setCurrentLang(lang);\n    };\n  }\n\n  render() {\n    const lang = this.props.lang;\n    return React.createElement(IntlProvider, {\n      locale: lang,\n      messages: translation[lang],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Routing, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state\", state);\n  return {\n    lang: state.locale.lang\n  };\n};\n\nexport default connect(null, {\n  setCurrentLang\n})(App);","map":{"version":3,"sources":["/home/hp/Desktop/ibtikar-front-end/Apps/General React Structure with  beam and sass (3rd copy)/project/src/App/App.js"],"names":["React","Routing","IntlProvider","translation","connect","setCurrentLang","App","Component","setLanguage","lang","props","render","mapStateToProps","state","console","log","locale"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,YAAP;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,wBAA7B;AAGA,OAAO,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SACvCC,WADuC,GACzBC,IAAI,IAAI;AAEpB,WAAKC,KAAL,CAAWL,cAAX,CAA0BI,IAA1B;AACD,KAJsC;AAAA;;AAMvCE,EAAAA,MAAM,GAAG;AAAA,UACAF,IADA,GACM,KAAKC,KADX,CACAD,IADA;AAEP,WACE,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAEA,IAAtB;AAA4B,MAAA,QAAQ,EAAEN,WAAW,CAACM,IAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AASD;;AAjBsC;;AAoBzC,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;AAEA,SAAO;AACLJ,IAAAA,IAAI,EAAEI,KAAK,CAACG,MAAN,CAAaP;AADd,GAAP;AAGD,CAND;;AAQA,eAAeL,OAAO,CAAC,IAAD,EAAM;AAACC,EAAAA;AAAD,CAAN,CAAP,CAA+BC,GAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport Routing from \"./Routing\";\nimport \"./App.scss\";\nimport { IntlProvider } from \"react-intl\";\nimport translation from './translation';\nimport {connect} from 'react-redux';\nimport {setCurrentLang} from '../Redux/Actions/index';\n\n\nexport class App extends React.Component {\n  setLanguage = lang => {\n    \n    this.props.setCurrentLang(lang);\n  };\n  \n  render() {\n    const {lang}=this.props;\n    return (\n      <IntlProvider locale={lang} messages={translation[lang]}>\n        <div>\n       \n          <Routing />\n          </div>\n     \n      </IntlProvider>\n    );\n  }\n  \n}\nconst mapStateToProps = state => {\n  console.log(\"state\",state);\n\n  return {\n    lang: state.locale.lang\n  }\n}\n\nexport default connect(null,{setCurrentLang})(App);\n"]},"metadata":{},"sourceType":"module"}